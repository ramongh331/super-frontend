import Head from "next/head";
import Link from "next/link";
import { motion } from "framer-motion";
import { MongoClient } from "mongodb";
import { getSession, signOut } from "next-auth/react";
import { useState, useRef } from "react";

export async function getServerSideProps(context) {
  const session = await getSession(context);
  const userEmail = session.user.email

// tests to see if the user is signed in before rendering the page.
if (!session) {
  return {
    redirect: {
      destination: "/",
      permanent: false,
    },
  };
}

  // connect to mongodb
  const client = await MongoClient.connect(process.env.MONGODB_URI);
  const db = client.db(process.env.MONGODB_DB);

  // get all profiles from profile collection in db
  const profiles = await db.collection("profile").find().toArray();
  const findProfile = await db.collection("profile").findOne({userEmail});

  client.close();

  const serializedProfiles = JSON.parse(JSON.stringify(profiles));
  const serializedfindProfile = JSON.parse(JSON.stringify(findProfile));

  return {
    props: {
      findProfile: serializedfindProfile,
      profiles: serializedProfiles,
      email: userEmail
    },
  };
}



export default function Connections({ profiles, findProfile, email }) {
  const [hasProfile, setHasProfile] = useState(findProfile?.userEmail === email ? 'hidden' : '')
  
  
  return (
      <>
        <Head>
          <title>Super</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
        </Head>
        <header className="w-11/12 h-28 mx-auto flex items-center justify-between ">
          <div className="flex items-center justify-between w-48">
            <img className="w-16" src="https://i.imgur.com/0BIn6HA.png" alt="Super Logo"/>
            <h1 className="text-4xl text-[#4478ff] font-bold">SUPER</h1>
            </div>
            <section className="flex w-[55rem] justify-between text-xl">
              <h2>Why Super?</h2>
              <h2>How does it work?</h2>
              <h2>Pricing</h2>
              <h2>Contact</h2>
            </section>
            <section>
              <motion.button 
              whileHover={{scale: 1.2}} 
              transition={{ type: "spring", stiffness: 400, damping: 10 }}
              className="text-xl font-semibold border-2 border-[#4478ff] rounded-md px-2" 
              onClick={() => signOut({callbackUrl: '/'})}>Sign Out</motion.button>
            </section>
        </header>
        <main className="w-full">
          <h3 className="text-center text-7xl mb-10">Connections</h3>
          <Link href="/profile/new"><button className={`${hasProfile} `}>Set up Profile</button></Link>
          <section className="w-full flex flex-col items-center">
              {profiles.map((profile) => (
                <Link key={profile._id} href={`/profile/view/${profile._id}`}>
                  <motion.section initial={{scale: 0}} whileInView={{scale: 1}} viewport={{once:true}}
                   className="w-fit h-[40rem] text-2xl mb-20 relative overflow-hidden rounded-2xl hover:shadow-md hover:shadow-black hover:scale-105 transition ease-in-out"
                  >
                    <img className="w-96 rounded-2xl " src="https://i.imgur.com/SXPej21.jpg" alt=""/>
                    <section className="absolute bottom-0 w-full p-4">
                      <h3 className="font-semibold text-3xl">{profile.sname}</h3>
                      <div className="flex justify-between text-xl">
                        <h4 >{profile.rname}</h4>
                        <p >{profile.age}</p>
                      </div>
                      <p className="text-xl">{profile.location}</p>
                    </section>
                  </motion.section>
                </Link>
              ))}
          </section>
        </main>
      </>
    );
}
