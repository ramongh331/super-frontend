import Head from "next/head";
import Link from "next/link";
import {motion} from 'framer-motion'
import { signOut, getSession } from "next-auth/react";
import { MongoClient, ObjectId } from "mongodb";
import { useState } from "react";

export async function getServerSideProps(context) {
  const session = await getSession(context);
  const userEmail = session?.user?.email;

  if (!session) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  const pID = context.query.pid;

  // CONNECT TO MONGODB DATABASE
  const client = await MongoClient.connect(process.env.MONGODB_URI);
  const db = client.db(process.env.MONGODB_DB);

  // QUERY FOR SPECIFIC DATA
  const otherProfileData = await db
    .collection("profile")
    .findOne({ _id: new ObjectId(pID) });
  const currentUserProfile = await db
    .collection("profile")
    .findOne({ userEmail });

  client.close();

  // SERIALIZE DATA AND TURN IT INTO JSON
  const serializedOPData = JSON.parse(JSON.stringify(otherProfileData));
  const serializedCUData = JSON.parse(JSON.stringify(currentUserProfile));

  // ADD TO PROPS OBJECT TO EXTRACT AS PROPS IN THE PAGE JSX
  return {
    props: {
      otherProfileData: serializedOPData,
      currentUserProfile: serializedCUData,
      pID,
    },
  };
}

export default function View({ otherProfileData, pID, currentUserProfile }) {
  const [ownsProfile, setOwnsProfile] = useState(
    currentUserProfile?._id === pID ? "visible" : "hidden"
  );

  const [menu, setMenu] = useState(false)

  function handleMenu(){
    setMenu(!menu)
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <header className="w-full h-20 mx-auto flex items-center justify-between relative">
          <img
            className="w-14 ml-12"
            src="https://i.imgur.com/0BIn6HA.png"
            alt="Super Logo"
          />
        <img
        onClick={handleMenu}
          className="w-10 mr-16 hover:cursor-pointer"
          src="https://i.imgur.com/P4oiyA3.png"
          alt="hamburger side menu"
        />
        <section className={`${menu ? '' : 'scale-y-0'} ease-in-out duration-300 origin-top w-fit h-36 bg-white px-6 py-1.5 text-lg flex flex-col items-center justify-evenly absolute right-2 top-[5rem]`}>
          <button className="hover:underline" onClick={() => signOut({ callbackUrl: "/" })}>
            Sign Out
          </button>
          <Link href={`/profile/edit/${otherProfileData._id}`}>
            <button className={`${ownsProfile} hover:underline`}>Edit Profile</button>
          </Link>
          <form action="/api/delete-action" method="POST">
            <button className={`${ownsProfile} hover:underline`} type="submit">
              Delete Profile
            </button>
          </form>
        </section>
      </header>
      <main className="w-full h-screen bg-blue-200">
        <Link href="/connections">Connections Page</Link> <br />
        <h2>View Profile Page of {otherProfileData.sname}</h2>
        <h2>Identity</h2>
        <p>Super Name: {otherProfileData.sname}</p>
        <p>Real Name: {otherProfileData.rname}</p>
        <p>Age: {otherProfileData.age}</p>
        <p>Location: {otherProfileData.location}</p>
        <p>Species: {otherProfileData.species}</p>
        <p>Gender: {otherProfileData.gender}</p>
        <p>Sexual Orientation: {otherProfileData.sex}</p>
        <h2>Attributes</h2>
        <p>Abilities: {otherProfileData.ability}</p>
        <p>Side: {otherProfileData.hva}</p>
        <p>Affiliation: {otherProfileData.tpi}</p>
        <h2>Bio</h2>
        <p>Backstory: {otherProfileData.story}</p>
      </main>
    </>
  );
}
